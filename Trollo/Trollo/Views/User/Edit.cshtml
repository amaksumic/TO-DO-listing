@model Trollo.user

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>user</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.idUser)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.idUser)
            @Html.ValidationMessageFor(model => model.idUser)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.username)
            @Html.ValidationMessageFor(model => model.username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.password)
            @Html.ValidationMessageFor(model => model.password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.creationDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.creationDate)
            @Html.ValidationMessageFor(model => model.creationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>

        <div hidden>
            @Html.LabelFor(model => model.registered)
        </div>
        <div hidden>
            @Html.EditorFor(model => model.registered)
         
        </div>

        <div hidden>
            @Html.LabelFor(model => model.picture)
        </div>
        <div hidden>
            @Html.EditorFor(model => model.picture)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
